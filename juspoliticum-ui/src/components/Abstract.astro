---
import { Debug } from "astro:components";
let { abstracts } = Astro.props;

abstracts = abstracts
  .map((abstract) => {
    // if abstract lang contains 'en', make language en, if it contains 'de', make language de, else make it fr
    const language = abstract.language.includes("en")
      ? "en"
      : abstract.language.includes("de")
        ? "de"
        : "fr";
    return {
      language,
      content: abstract.content,
    };
  });
---

<div class="tabs mt-4">
  <input type="radio" id="lang_fr" name="lang" value="fr" checked />
  <label for="lang_fr">Fran√ßais</label>

  <input type="radio" id="lang_en" name="lang" value="en" />
  <label for="lang_en">English</label>

  <input type="radio" id="lang_de" name="lang" value="de" />
  <label for="lang_de">Deutsch</label>
  <div class="abstract_container">
    {
      abstracts.map((abstract) => (
        <div
          class="abstract"
          id={`abs_${abstract.language}`}
          set:html={abstract.content}
        />
      ))
    }
  </div>
</div>
<script>
  // if content of abstract is empty or if no abstract for a language, hide the radio button label
  const abstracts = document.querySelectorAll(".abstract");
  let hasAbstract = false;
  abstracts.forEach((abstract) => {
    if (abstract.innerText === "") {
      const lang = abstract.id.split("_")[1];
      const label = document.querySelector(`label[for="lang_${lang}"]`);
      label.style.display = "none";
    } else {
      hasAbstract = true;
    }
  });
  if (!hasAbstract) {
    const tabs = document.querySelector(".tabs");
    tabs.style.display = "none";
  }
  ["en","de","fr"].forEach((lang) => {
    const label = document.querySelector(`label[for="lang_${lang}"]`);
    // if no abstract for a language, hide the radio button label
    // abstracts is a node list
    if (!Array.prototype.some.call(abstracts, (abstract) => abstract.id === `abs_${lang}`)) {
      label.style.display = "none";
    }
  });
</script>

<style is:global>
  .tabs input[type="radio"] {
    display: none; /* Hide radio buttons */
  }

  .abstract {
    @apply bg-white dark:bg-black text-lg;
  }
  .tabs input[type="radio"]:checked + label {
    @apply bg-white dark:bg-black;
  }
  .tabs label {
    @apply w-24 h-12 text-center flex items-center justify-center cursor-pointer;
    cursor: pointer;
  }
  .abstract_container {
    @apply p-6 bg-white dark:bg-black w-full;
  }

  .abstract {
    display: none;
  }
  #lang_fr:checked ~ .abstract_container #abs_fr,
  #lang_en:checked ~ .abstract_container #abs_en,
  #lang_de:checked ~ .abstract_container #abs_de {
    display: block;
  }
</style>
